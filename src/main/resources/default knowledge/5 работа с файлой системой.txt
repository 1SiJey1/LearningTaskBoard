Дз
Тебе надо самостоятельно разобраться в следующем:

0. Прочитать про I/O стримы, try with resources
    https://docs.oracle.com/javase/tutorial/essential/io/streams.html - Слева будет много всяких вкладок:
        ByteStream, DataStream, и т.д. Про всё наизусть знать не обязательно, это как шпаргалка при выполнении задания.
        Основные стримы, которые тебя будет интересовать:
            InputStream, FileInputStream.
        Также есть утилитарный класс Files от Apache, он в проекте уже подключен, можешь им тоже пользоваться
            https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html
    Это про try with resources with I/O и примерами:
        https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html#:~:text=The%20try%20%2Dwith%2Dresources%20statement%20is%20a%20try%20statement%20that,the%20end%20of%20the%20statement.
1. Что такое интерфейс Serializable и зачем он нужен
2. Что делает аннотация @Transient
3. Нужно создать пакет, в котором необходимо создать класс с двумя методами
    Первый метод будет принимать первым аргументом Task, а вторым - название файла куда будет записан Task
    Второй метод будет принимать первым аргументом путь к файлу, а возвращать - Task

    На этот класс нужно написать юнит тест. Он должен будет делать следующее:
    3.1. Создавать таску task
    3.2. Записывать её в файл tmp.task
    3.3. Потом нужно будет прочитать из файла Task readTask
    3.4. Проверить на equals task и readTask
    3.5. Удалить файл tmp.task
    3.6. Проверить что файл tmp.task действительно был удален. Для этого попробуй прочитать из него ещё раз.
         Обработай исключение таким образом, чтобы тест не провалился (пример уже был в 3 файле про дженерики)


4. Сделать то же самое для интерфейса TaskBoard. Только название файла должно быть tmp.board

Если будут вопросы, то мне можешь писать. Можно также пользоваться ютубом гуглом и чем хочешь вообще, но не помощью
других людей (моей можно)



